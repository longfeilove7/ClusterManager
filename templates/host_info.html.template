<!doctype html>
<html class="no-js" lang="">

<head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>ClusterManager</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link rel="stylesheet" href="/static/fontawesome/css/all.css">
    <link rel="stylesheet" href="/static/css/custom/body.css">
    <link rel="stylesheet" href="/static/css/custom/subrange.css">
    <link rel="stylesheet" href="/static/css/custom/sidebar.css">
    <link rel="stylesheet" href="/static/css/vendor/bootstrap.min.css">
    <link rel="manifest" href="site.webmanifest">
    <link rel="apple-touch-icon" href="icon.png">
    <!-- Place favicon.ico in the root directory -->

    <link rel="stylesheet" href="/static/css/normalize.css">
    <link rel="stylesheet" href="/static/css/main.css">

</head>

<body>
    <!--[if lte IE 9]>
    <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="https://browsehappy.com/">upgrade your browser</a> to improve your experience and security.</p>
  <![endif]-->

    <!-- Add your site or application content here -->

    <nav class="navbar navbar-default no-margin">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div>
            <div class="navbar-header fixed-brand" style="float: left;">
                <a class="navbar-brand" href="#">
                    <i class="fab fa-earlybirds fab-9"></i> 超算管理中心</a>
            </div>
            <div style="float: left;">
                <a href="#menu-toggle" class="btn btn-secondary" id="menu-toggle">
                    <i class="fa fa-align-justify fa-4"></i>
                </a>
            </div>
        </div>
        <div class="username">
            当前用户: {{ obj.username }}
        </div>

        <!-- navbar-header-->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li class="active">
                    <button class="navbar-toggle collapse in" data-toggle="collapse" id="menu-toggle-2">
                        <span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>
                    </button>
                </li>
            </ul>
        </div>
        <!-- bs-example-navbar-collapse-1 -->
    </nav>


    <div id="wrapper">
        <!-- Sidebar -->
        <div id="sidebar-wrapper">
            <ul class="sidebar-nav nav-pills nav-stacked" id="menu">
                <li class="active">
                    <a href="#">
                        <span class="fa-stack fa-lg pull-left">
                            <i class="fa fa-tachometer-alt  fa-stack-1x "></i>
                        </span>仪表板</a>
                    <ul class="nav-pills nav-stacked" style="list-style-type:none;">
                        <li>
                            <a href="#">link1</a>
                        </li>
                        <li>
                            <a href="#">link2</a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a href="#">
                        <span class="fa-stack fa-lg pull-left">
                            <i class="fa fa-rocket fa-stack-1x "></i>
                        </span>设备管理</a>
                    <ul class="nav-pills nav-stacked" style="list-style-type:none;">
                        <li>
                            <a href="/host_info/">
                                <span class="fa-stack fa-lg pull-left">
                                    <i class="fa fa-rocket fa-stack-1x "></i>
                                </span>主机管理</a>
                        </li>
                        <li>
                            <a href="/add_cluster/">
                                <span class="fa-stack fa-lg pull-left">
                                    <i class="fa fa-rocket fa-stack-1x "></i>
                                </span>集群管理</a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a href="/import/">
                        <span class="fa-stack fa-lg pull-left">
                            <i class="fa fa-file-import fa-stack-1x "></i>
                        </span>导入数据</a>
                </li>
                <li>
                    <a href="/export/">
                        <span class="fa-stack fa-lg pull-left">
                            <i class="fa fa-file-export fa-stack-1x "></i>
                        </span>导出数据</a>
                </li>
                <li>
                    <a href="#">
                        <span class="fa-stack fa-lg pull-left">
                            <i class="fa fa-cloud-download fa-stack-1x "></i>
                        </span>预览</a>
                </li>
                <li>
                    <a href="#">
                        <span class="fa-stack fa-lg pull-left">
                            <i class="fa fa-cart-plus fa-stack-1x "></i>
                        </span>事件</a>
                </li>
                <li>
                    <a href="#">
                        <span class="fa-stack fa-lg pull-left">
                            <i class="fa fa-youtube-play fa-stack-1x "></i>
                        </span>关于</a>
                </li>
                <li>
                    <a href="#">
                        <span class="fa-stack fa-lg pull-left">
                            <i class="fa fa-wrench fa-stack-1x "></i>
                        </span>服务</a>
                </li>
                <li>
                    <a href="#">
                        <span class="fa-stack fa-lg pull-left">
                            <i class="fa fa-server fa-stack-1x "></i>
                        </span>联系</a>
                </li>
            </ul>
        </div>
    
    <!-- /#sidebar-wrapper -->
    <!-- Page Content -->
    <div id="page-content-wrapper">

        <!--  右边主机内容-->
        <div style="width: 100%;">
            <nav class="navbar navbar-expand-md bg-secondary navbar-dark">
                <a class="navbar-brand" href="#">主机管理</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#collapsibleNavbar">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="collapsibleNavbar">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link" href="#" id="btnBatAdd" data-toggle="modal" data-target="#addModal">添加主机</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" id="btnBatEdit">批量编辑</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" id="btnBatDelete">批量删除</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" id="batchBtn1" onclick="toBatchPowerOn('mytable',this)">批量开机</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" id="batchBtn2" onclick="toBatchPowerOff('mytable',this)">批量关机</a>
                        </li>
                        <!-- Dropdown -->
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbardrop" data-toggle="dropdown">
                                启动顺序
                            </a>
                            <div class="dropdown-menu">
                                <a class="dropdown-item" herf="#">DISK</a>
                                <a class="dropdown-item" herf="#">PXE</a>
                                <a class="dropdown-item" herf="#">CDROM</a>
                                <a class="dropdown-item" herf="#">BIOS</a>
                            </div>
                        </li>
                        <li class="nav-item search">
                            <input type="text" id="searchbox" style="width:257px" value="search" />
                        </li>
                    </ul>
                </div>
            </nav>
        </div>

        <div style="width: 100%">
            <table id="mytable" class="table table-striped table-hover table-sm">
                <thead class="thead-light">
                    <tr>
                        <th>ID</th>
                        <th>机房</th>
                        <th>机柜</th>
                        <th>刀箱</th>
                        <th>刀片</th>
                        <th>主机名</th>
                        <th>业务IP</th>
                        <th>管理IP</th>
                        <th>存储IP</th>
                        <th>集群</th>
                        <th>型号</th>
                        <th>操作系统</th>
                        <th>开机</th>
                        <th>关机</th>
                        <th>重启</th>
                        <th>开机时间</th>
                        <th>关机时间</th>
                        <th>状态</th>
                        <th>运行时长</th>
                        <th>bootdev</th>
                        <th>修改</th>
                        <th>删除</th>
                        <th>
                            <input type="checkbox" id="select-all" onclick="selectAll()">
                        </th>
                    </tr>
                </thead>
                <tbody>
                    {% for row in obj %}
                    <tr>
                        <td>{{ row.id }}</td>
                        <td>{{ row.roomNO }}</td>
                        <td>{{ row.cabinetNO }}</td>
                        <td>{{ row.bladeBoxNO }}</td>
                        <td>{{ row.bladeNO}}</td>
                        <td>{{ row.hostName }}</td>
                        <td>{{ row.serviceIP }}</td>
                        <td>{{ row.manageIP }}</td>
                        <td>{{ row.storageIP }}</td>
                        <td>{{ row.hostCluster.hostCluster }}</td>
                        <td>{{ row.hardware }}</td>
                        <td>{{ row.service }}</td>
                        <td>
                            <button type="button" id="btn1" class="singleButton" name="btn" onclick="toPowerOn('mytable',this)">
                                <i class="fa fa-plug fa-4"></i>
                            </button>
                        </td>
                        <td>
                            <button type="button" id="btn2" class="singleButton" name="btn" onclick="toPowerOff('mytable',this)">
                                <i class="fa fa-power-off fa-4"></i>
                            </button>
                        </td>
                        <td>
                            <button type="button" id="btn3" class="singleButton" name="btn" onclick="toPowerCycle('mytable',this)">
                                <i class="fa fa-recycle fa-4"></i>
                            </button>
                        </td>
                        <td>{{ row.powerOnTime|date:"Y-m-d H:i:s" }}</td>
                        <td>{{ row.powerOffTime|date:"Y-m-d H:i:s" }}</td>
                        <td>{{ row.checkOnline }}</td>
                        <td>{{ row.runTime }}</td>
                        <td>
                            <form method="get">
                                <select name="app">
                                    <option value="disk">DISK</option>
                                    <option value="pxe">PXE</option>
                                    <option value="cdrom">CDROM</option>
                                    <option value="bios">BIOS</option>
                                </select>
                            </form>
                        </td>
                        <td>
                            <a id="edit" href="/host_edit-{{ row.id }}/" class="singleButton">
                                <i class="fa fa-edit fa-4"></i>
                            </a>
                        </td>
                        <td>
                            <button type="button" class="singleButton" id="{{ row.id }}" name="btn" onclick="toDeleteHost('mytable',this)" data-toggle="modal"
                                data-target="#delModal">
                                <i class="fas fa-trash-alt fa-4"></i>
                            </button>
                        </td>
                        <td>
                            <input type="checkbox" name="selected" value={'ID':{{row.id}},'manageIP':'{{row.manageIP}}'} onclick="oneToAll()" /><!--no blank-->
                                                                                        
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    


    <!--  添加设备模态对话框-->
    <form role="form" action="/host_info/" method="post">
        <!-- 模态框 -->
        <div class="modal fade" id="addModal">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">

                    <!-- 模态框头部 -->
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel">
                            添加设备
                        </h4>
                    </div>

                    <!-- 模态框主体 -->

                    <div class="modal-body">

                        {% csrf_token %}
                        <div class="row">
                            <div class="col-lg-3 form-group">
                                <select class="form-control" name="roomNO">
                                    <option value="A机房">A机房</option>
                                    <option value="B机房">B机房</option>
                                    <option value="C机房">C机房</option>
                                </select>
                            </div>
                            <div class="col-lg-3 form-group">
                                <input class="form-control" type="text" name="cabinetNO" placeholder="机柜编号">
                            </div>
                            <div class="col-lg-3 form-group">
                                <input class="form-control input-sm" type="text" name="bladeBoxNO" placeholder="刀箱编号">
                            </div>
                            <div class="col-lg-3 form-group">
                                <select class="form-control" name="bladeNO">
                                    <option value="">刀片</option>
                                    <option value="01号">01号</option>
                                    <option value="02号">02号</option>
                                    <option value="03号">03号</option>
                                    <option value="04号">04号</option>
                                    <option value="05号">05号</option>
                                    <option value="06号">06号</option>
                                    <option value="07号">07号</option>
                                    <option value="08号">08号</option>
                                    <option value="09号">09号</option>
                                    <option value="10号">10号</option>
                                </select>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 form-group">
                                <input class="form-control" type="text" name="hostName" placeholder="主机名">
                            </div>
                            <div class="col-lg-3 form-group">
                                <input class="form-control" type="text" name="serviceIP" placeholder="业务IP" required>
                            </div>
                            <div class="col-lg-3 form-group">
                                <input class="form-control" type="text" name="manageIP" placeholder="管理IP" required>
                            </div>
                            <div class="col-lg-3 form-group">
                                <input class="form-control" type="text" name="storageIP" placeholder="存储IP" required>
                            </div>

                        </div>

                        <div class="row">
                            <div class="col-lg-3 form-group">
                                <input class="form-control" type="text" name="service" placeholder="操作系统">
                            </div>
                            <div class="col-lg-3 form-group">
                                <input class="form-control" type="text" name="hardware" placeholder="硬件型号">
                            </div>
                            <div class="col-lg-3 form-group">
                                <input class="form-control" type="text" name="ipmiUser" placeholder="IPMI用户名" required>
                            </div>
                            <div class="col-lg-3 form-group">
                                <input class="form-control" type="text" name="ipmiPassword" placeholder="IPMI密码" required>
                            </div>

                        </div>

                        <div class="row">
                            <div class="col-lg-12 form-group">
                                <select class="form-control" name="hostCluster" required>
                                    <option value="">选择集群</option>
                                    {% for cluster in cluster_list %}
                                    <option value="{{ cluster.id }}">{{ cluster.hostCluster }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>


                    </div>


                    <!-- 模态框底部 -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">关闭</button>
                        <button type="submit" class="btn btn-primary">提交</button>
                    </div>

                </div>
            </div>
        </div>
    </form>


    <!--  删除设备的模态-->
    <form method="post" role="form" id="delForm">
        {% csrf_token %}
        <div id="delModal" class="modal fade">
            <div class="modal-dialog modal-sm">
                <div class="modal-content">
                    <!-- 模态框头部 -->
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel">
                            删除设备
                        </h4>
                    </div>

                    <!-- 模态框主体 -->
                    <div class="modal-body">
                        确定要删除该设备吗?



                    </div>

                    <!-- 模态框底部 -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">关闭</button>
                        <button type="submit" class="btn btn-danger">删除</button>
                    </div>
                </div>
            </div>
        </div>
    </form>



</div>
    <!-- /#page-content-wrapper -->
</div>
    <!-- /#wrapper -->

    <!-- jQuery -->

    <script src="/static/js/vendor/modernizr-3.6.0.min.js"></script>
    <script src="/static/js/vendor/jquery-3.3.1.min.js"></script>
    <script src="/static/js/vendor/popper.min.js"></script>
    <script src="/static/js/vendor/bootstrap.min.js"></script>
    <script src="/static/js/vendor/intercooler-1.2.1.min.js"></script>
    <script></script>
    <script src="/static/js/plugins.js"></script>
    <script src="/static/js/main.js"></script>
    <!-- Menu Toggle Script -->
    <script>
        $("#menu-toggle").click(function (e) {
            e.preventDefault();
            $("#wrapper").toggleClass("toggled");
        });
    </script>

    <!-- <script type="text/javascript">
     $(document).ready(function(){
         $("#mytable").find("tr").css("background-color", "#D1F7FA");
         $("#mytable").find("tr:odd").css("background-color", "#D1F0FA");
     });
     </script> -->
    <script>       
        /*         删除的模态*/
        function toDeleteHost(id, e) {
            /*            获取当前点击事件标签上的id*/

            var getID = e.parentNode.parentNode.children[0].innerHTML;
            console.log("getid = " + getID)
            // document.body.onclick = function (event) { 部分浏览器不支持此方法，改用如上parentNode方式。
            //     var id = event.target.id;
            //     console.log(id);
            if (getID) {
                var link = "/host_del-" + getID + '/';
                console.log(link);
                /*set the form action*/
                $('#delForm').attr('action', link)

            }

        };


    </script>

    <script type="text/javascript">

        // using jQuery
        function getCookie(name) {
            var cookieValue = null;
            if (document.cookie && document.cookie !== '') {
                var cookies = document.cookie.split(';');
                for (var i = 0; i < cookies.length; i++) {
                    var cookie = jQuery.trim(cookies[i]);
                    // Does this cookie string begin with the name we want?
                    if (cookie.substring(0, name.length + 1) === (name + '=')) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
                    }
                }
            }
            return cookieValue;
        }
        var csrftoken = getCookie('csrftoken');

        function csrfSafeMethod(method) {
            // these HTTP methods do not require CSRF protection
            return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
        }
        $.ajaxSetup({
            beforeSend: function (xhr, settings) {
                if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                    xhr.setRequestHeader("X-CSRFToken", csrftoken);
                }
            }
        });

        /** 
        * 遍历表格内容返回数组
        * @param Int  id 表格id
        * @return Array
        */
        function toPowerOn(id, e) {
            var getID = e.parentNode.parentNode.children[0].innerHTML;
            var getIP = e.parentNode.parentNode.children[7].innerHTML;

            if (confirm("Power on " + getIP)) {
                $.ajax({
                    contentType: "application/x-www-form-urlencoded; charset=utf-8",
                    //contentType: "application/json; charset=utf-8", //django not support json,don't use this
                    dataType: "json", //for to get json
                    url: "/power_on/",
                    type: "POST",
                    cache: false,
                    data: {
                        'ID': getID,
                        'IP': getIP
                    },
                    beforeSend: function (xhr, settings) {
                        //此处调用刚刚加入的js方法
                        var csrftoken = getCookie('csrftoken');
                        if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                            xhr.setRequestHeader("X-CSRFToken", csrftoken);
                        }
                    },
                    success: function (data) {
                        console.log(data)
                        //alert(data)
                        //以上是后端函数返回成功的信息
                        e.parentNode.parentNode.children[15].innerHTML = data[1]
                        if (data[2] == "fail") {
                            alert(data[0] + "poweron" + data[2])
                        }
                    },
                    error: function (request, info, e) {
                        alert("false");
                        console.log(e)
                    }
                })
            }
        }

    </script>

    <script type="text/javascript">

        // using jQuery
        function getCookie(name) {
            var cookieValue = null;
            if (document.cookie && document.cookie !== '') {
                var cookies = document.cookie.split(';');
                for (var i = 0; i < cookies.length; i++) {
                    var cookie = jQuery.trim(cookies[i]);
                    // Does this cookie string begin with the name we want?
                    if (cookie.substring(0, name.length + 1) === (name + '=')) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
                    }
                }
            }
            return cookieValue;
        }
        var csrftoken = getCookie('csrftoken');

        function csrfSafeMethod(method) {
            // these HTTP methods do not require CSRF protection
            return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
        }
        $.ajaxSetup({
            beforeSend: function (xhr, settings) {
                if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                    xhr.setRequestHeader("X-CSRFToken", csrftoken);
                }
            }
        });

        /** 
         * 遍历表格内容返回数组
         * @param Int  id 表格id
         * @return Array
         */
        function toPowerOff(id, e) {
            var getID = e.parentNode.parentNode.children[0].innerHTML;
            var getIP = e.parentNode.parentNode.children[7].innerHTML;

            if (confirm("Power off " + getIP)) {
                $.ajax({
                    contentType: "application/x-www-form-urlencoded; charset=utf-8",
                    //contentType: "application/json; charset=utf-8", //django not support json,don't use this
                    dataType: "json", //for to get json
                    url: "/power_off/",
                    type: "POST",
                    cache: false,
                    data: {
                        'ID': getID,
                        'IP': getIP
                    },
                    beforeSend: function (xhr, settings) {
                        //此处调用刚刚加入的js方法
                        var csrftoken = getCookie('csrftoken');
                        if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                            xhr.setRequestHeader("X-CSRFToken", csrftoken);
                        }
                    },
                    success: function (data) {
                        e.parentNode.parentNode.children[16].innerHTML = data[1]
                        e.parentNode.parentNode.children[18].innerHTML = data[3]
                        if (data[2] == "fail") {
                            alert(data[0] + "poweroff" + data[2])
                        }
                        console.log(data)
                        //alert(data[1])
                        //以上是后端函数返回成功的信息
                    },
                    error: function (request, info, e) {
                        alert("false");
                        console.log(e)
                    }
                })
            }
        }

    </script>

    <script type="text/javascript">

        // using jQuery
        function getCookie(name) {
            var cookieValue = null;
            if (document.cookie && document.cookie !== '') {
                var cookies = document.cookie.split(';');
                for (var i = 0; i < cookies.length; i++) {
                    var cookie = jQuery.trim(cookies[i]);
                    // Does this cookie string begin with the name we want?
                    if (cookie.substring(0, name.length + 1) === (name + '=')) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
                    }
                }
            }
            return cookieValue;
        }
        var csrftoken = getCookie('csrftoken');

        function csrfSafeMethod(method) {
            // these HTTP methods do not require CSRF protection
            return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
        }
        $.ajaxSetup({
            beforeSend: function (xhr, settings) {
                if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                    xhr.setRequestHeader("X-CSRFToken", csrftoken);
                }
            }
        });

        /** 
         * 遍历表格内容返回数组
         * @param Int  id 表格id
         * @return Array
         */
        function toPowerCycle(id, e) {
            var getID = e.parentNode.parentNode.children[0].innerHTML;
            var getIP = e.parentNode.parentNode.children[7].innerHTML;

            if (confirm("Power cycle " + getIP)) {
                $.ajax({
                    contentType: "application/x-www-form-urlencoded; charset=utf-8",
                    //contentType: "application/json; charset=utf-8", //django not support json,don't use this
                    dataType: "json", //for to get json
                    url: "/power_cycle/",
                    type: "POST",
                    cache: false,
                    data: {
                        'ID': getID,
                        'IP': getIP
                    },
                    beforeSend: function (xhr, settings) {
                        //此处调用刚刚加入的js方法
                        var csrftoken = getCookie('csrftoken');
                        if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                            xhr.setRequestHeader("X-CSRFToken", csrftoken);
                        }
                    },
                    success: function (data) {
                        e.parentNode.parentNode.children[15].innerHTML = data[1]
                        if (data[2] == "fail") {
                            alert(data[0] + "poweron" + data[2])
                        }
                        console.log(data)
                        //alert(data[1])
                        //以上是后端函数返回成功的信息
                    },
                    error: function (request, info, e) {
                        alert("false");
                        console.log(e)
                    }
                })
            }
        }

    </script>

    <script type="text/javascript">

        // using jQuery
        function getCookie(name) {
            var cookieValue = null;
            if (document.cookie && document.cookie !== '') {
                var cookies = document.cookie.split(';');
                for (var i = 0; i < cookies.length; i++) {
                    var cookie = jQuery.trim(cookies[i]);
                    // Does this cookie string begin with the name we want?
                    if (cookie.substring(0, name.length + 1) === (name + '=')) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
                    }
                }
            }
            return cookieValue;
        }
        var csrftoken = getCookie('csrftoken');

        function csrfSafeMethod(method) {
            // these HTTP methods do not require CSRF protection
            return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
        }
        $.ajaxSetup({
            beforeSend: function (xhr, settings) {
                if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                    xhr.setRequestHeader("X-CSRFToken", csrftoken);
                }
            }
        });

        /** 
         * 遍历表格内容返回数组
         * @param Int  id 表格id
         * @return Array
         */
        function toBatchPowerOn(id, e) {
            var allValue = queryCheckedValue()
            if (allValue.length == 0) {
                alert("null")
            }
            else {
                //    var getIP = e.parentNode.parentNode.children[7].innerHTML;
                console.log(allValue)
                strAllValue = allValue.join("-");
                console.log(strAllValue)
                if (confirm("batch Power On [ " + allValue.length + " ] server")) {
                    $.ajax({
                        contentType: "application/x-www-form-urlencoded; charset=utf-8",
                        //contentType: "application/json; charset=utf-8", //django not support json,don't use this
                        dataType: "json", //for to get json
                        url: "/batch_power_on/",
                        type: "POST",
                        cache: false,
                        data: {
                            'allValue': strAllValue
                        },
                        beforeSend: function (xhr, settings) {
                            //此处调用刚刚加入的js方法
                            var csrftoken = getCookie('csrftoken');
                            if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                                xhr.setRequestHeader("X-CSRFToken", csrftoken);
                            }
                        },
                        success: function (data) {
                            console.log(data)
                            for (var i = 0; i < data.length; i++) {
                                //console.log("shis" + data[i]);
                                var newdata = new Array();
                                newdata = data[i];
                                console.log(newdata);
                                getID = newdata[0];
                                var index = 0;
                                // from the ID to get the rowID
                                $("table tr").each(function (i) {

                                    if ($($(this).find("td").get(0)).text() == getID) {
                                        index = i;
                                        //console.log("index" + index)
                                    }
                                })
                                rowID = index;
                                console.log("rowID " + rowID)
                                //e.parentNode.parentNode.children[15].innerHTML=data[1]
                                mytable.rows[rowID].cells[15].innerHTML = newdata[2];
                                if (newdata[3] == "fail") {
                                    alert(newdata[1] + "poweron" + newdata[3]);
                                }
                            }
                            //alert(data[1])
                            //以上是后端函数返回成功的信息
                        },
                        error: function (request, info, e) {
                            alert("false");
                            console.log(e)
                        }
                    })
                }
            }
        }

    </script>

    <script type="text/javascript">

        // using jQuery
        function getCookie(name) {
            var cookieValue = null;
            if (document.cookie && document.cookie !== '') {
                var cookies = document.cookie.split(';');
                for (var i = 0; i < cookies.length; i++) {
                    var cookie = jQuery.trim(cookies[i]);
                    // Does this cookie string begin with the name we want?
                    if (cookie.substring(0, name.length + 1) === (name + '=')) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
                    }
                }
            }
            return cookieValue;
        }
        var csrftoken = getCookie('csrftoken');

        function csrfSafeMethod(method) {
            // these HTTP methods do not require CSRF protection
            return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
        }
        $.ajaxSetup({
            beforeSend: function (xhr, settings) {
                if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                    xhr.setRequestHeader("X-CSRFToken", csrftoken);
                }
            }
        });

        /** 
         * 遍历表格内容返回数组
         * @param Int  id 表格id
         * @return Array
         */
        function toBatchPowerOff(id, e) {
            var allValue = queryCheckedValue()
            if (allValue.length == 0) {
                alert("null")
            }
            else {
                //    var getIP = e.parentNode.parentNode.children[7].innerHTML;
                console.log(allValue)
                strAllValue = allValue.join("-");
                console.log(strAllValue)
                if (confirm("batch Power Off [ " + allValue.length + " ] server")) {
                    $.ajax({
                        contentType: "application/x-www-form-urlencoded; charset=utf-8",
                        //contentType: "application/json; charset=utf-8", //django not support json,don't use this
                        dataType: "json", //for to get json
                        url: "/batch_power_off/",
                        type: "POST",
                        cache: false,
                        data: {
                            'allValue': strAllValue
                        },
                        beforeSend: function (xhr, settings) {
                            //此处调用刚刚加入的js方法
                            var csrftoken = getCookie('csrftoken');
                            if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                                xhr.setRequestHeader("X-CSRFToken", csrftoken);
                            }
                        },
                        success: function (data) {
                            console.log(data)
                            for (var i = 0; i < data.length; i++) {
                                //console.log("shis" + data[i]);
                                var newdata = new Array();
                                newdata = data[i];
                                console.log(newdata);
                                getID = newdata[0];
                                var index = 0;
                                // from the ID to get the rowID
                                $("table tr").each(function (i) {

                                    if ($($(this).find("td").get(0)).text() == getID) {
                                        index = i;
                                        //console.log("index" + index)
                                    }
                                })
                                rowID = index;
                                console.log("rowID " + rowID)
                                //e.parentNode.parentNode.children[15].innerHTML=data[1]
                                mytable.rows[rowID].cells[16].innerHTML = newdata[2];
                                mytable.rows[rowID].cells[18].innerHTML = newdata[4];
                                if (newdata[3] == "fail") {
                                    alert(newdata[1] + "poweroff" + newdata[3]);
                                }
                            }
                            //alert(data[1])
                            //以上是后端函数返回成功的信息
                        },
                        error: function (request, info, e) {
                            alert("false");
                            console.log(e)
                        }
                    })
                }
            }
        } 
    </script>

    <script>
        //     $(function(){
        //         //$('table tr:not(:first)').remove();
        //         var len = $('table tr').length;
        //         for(var i = 1;i<len;i++){
        //             $('table tr:eq('+i+') td:first').text(i);
        //         }

        // });
        function selectAll() {

            if ($("#select-all").is(":checked")) {

                $("[name='selected']").prop("checked", true);
                var allValue = queryCheckedValue();
            }
            else {

                $("[name='selected']").prop("checked", false);
            }

        }

        //获取所有选中checkbox的值

        function queryCheckedValue() {

            var arrayObj = new Array();

            $("input:checkbox[name='selected']:checked").each(function (i) {

                var val = $(this).val();

                arrayObj.push(val)
            });
            console.log("selected " + arrayObj)
            return arrayObj;

        }

        //所有的name为‘selected’的checkbox的值
        function noCheckedValue() {

            var str = "";
            $("input:checkbox[name='selected']").each(function (i) {

                var val = $(this).val();
                str = str + "," + val;
            });
            return str;
        }

        //判断所有的子checkbox全部选中时，总checkbox选中，否则，反之；
        function oneToAll() {

            var allChecked = 0;//所有选中checkbox的数量

            var all = 0;//所有checkbox的数量

            $("input:checkbox[name='selected']").each(function (i) {
                all++;
                if ($(this).is(":checked")) {
                    allChecked++;
                }

            });

            if (allChecked == all) {//相等时，则所有的checkbox都选中了，否则，反之；

                $("#select-all").prop("checked", true);

            } else {

                $("#select-all").prop("checked", false);

            }

        }

        // $(function(){


        //     $("table tr").click(function(){
        //         var input = $(this).find("input[type=checkbox]");//获取checkbox    

        //         //判断当前checkbox是否为选中状态
        //         if(input.is(":checked")){           
        //             input.attr("checked",false);
        //         }else{
        //             input.attr("checked",true);
        //         }

        //     })  
        // })
    </script>



    <script>
        $(function () {
            $("#searchbox").keyup(function () {
                if ($(this).val() != "search") {
                    $("table tbody tr").hide()
                        .filter(":contains('" + ($(this).val()) + "')").show();//filter and contains
                }

            }).keyup();
        });
        $("#searchbox").focus(function () {
            if ($(this).val() == "search") {
                $(this).val("");
            }
        }).blur(function () {
            if ($(this).val() == "") {
                $(this).val("search");
            }
        })
    </script>

    <!-- Google Analytics: change UA-XXXXX-Y to be your site's ID. -->
    <script>
        window.ga = function () { ga.q.push(arguments) }; ga.q = []; ga.l = +new Date;
        ga('create', 'UA-XXXXX-Y', 'auto'); ga('send', 'pageview')
    </script>
    <script src="https://www.google-analytics.com/analytics.js" async defer></script>
</body>

</html>